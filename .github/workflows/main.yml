name: Build and Release Go Application

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: ['*']
        arch: [amd64]
        goos: [linux, darwin]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Build Release
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.arch }} go build -o pwgen-${{ matrix.goos }}-${{ matrix.arch }} ./cmd/pwgen/pwgen.go
      - name: Compress Binary
        run: gzip pwgen-${{ matrix.goos }}-${{ matrix.arch }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            * Latest release
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pwgen-${{ matrix.goos }}-${{ matrix.arch }}.gz
          asset_name: pwgen-${{ matrix.goos }}-${{ matrix.arch }}.gz
          asset_content_type: application/gzip
